plugins {
    id 'java'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation group: 'org.parboiled', name: 'parboiled-java', version: '1.3.1'
    implementation group: 'org.ow2.asm', name: 'asm', version: '9.1'
    implementation group: 'net.openhft', name: 'compiler', version: '2.+'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.+'
}

[
    playground: 'wordy.demo.Playground',
    shader: 'wordy.demo.shader.ShaderUI'
].each { taskName, mainClass ->
    task(taskName, dependsOn: 'classes', type: JavaExec) {
        main = mainClass
        classpath = sourceSets.main.runtimeClasspath
        jvmArgs = ['--illegal-access=permit']  // required for parboiled; see https://github.com/sirthias/parboiled/issues/175#issuecomment-878331837
    }
}

test {
    useJUnitPlatform()
    jvmArgs '--illegal-access=permit'  // required for parboiled; see https://github.com/sirthias/parboiled/issues/175#issuecomment-878331837
    testLogging {
        showStandardStreams = true
    }
    afterTest { desc, result -> 
        logger.quiet "[${desc.className}] ${desc.name}: ${result.resultType}"
    }
}

sourceCompatibility = 1.16
targetCompatibility = 1.16

sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['res']
sourceSets.test.java.srcDirs = ['test']
